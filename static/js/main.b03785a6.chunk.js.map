{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["SleepApp","viewofSleep_viewRef","useRef","viewofSleepRef","viewofStat_viewRef","useEffect","runtime","Runtime","module","notebook","name","console","log","Inspector","current","dispose","ref","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAcA,SAASA,IACP,IAAMC,EAAsBC,mBACtBC,EAAiBD,mBACjBE,EAAqBF,mBAc3B,OAZAG,qBAAU,WACR,IAAMC,EAAU,IAAIC,IAQpB,OAPAD,EAAQE,OAAOC,KAAU,SAAAC,GAEvB,OADAC,QAAQC,IAAIF,GACC,sBAATA,EAAqC,IAAIG,IAAUZ,EAAoBa,SAC9D,iBAATJ,EAAgC,IAAIG,IAAUV,EAAeW,SACpD,gBAATJ,GAA+B,IAAIG,IAAUT,EAAmBU,YAG/D,kBAAMR,EAAQS,aACpB,IAGD,qCACE,qBAAKC,IAAKf,IACV,qBAAKe,IAAKb,IACV,qBAAKa,IAAKZ,OA4BDa,MA1Df,WACE,OACE,qBAAKC,UAAU,kBAAf,SACE,cAAClB,EAAD,OCISmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b03785a6.chunk.js","sourcesContent":["import React, {useRef, useEffect} from \"react\";\nimport {Runtime, Inspector} from \"@observablehq/runtime\";\nimport notebook from \"@mikkelgthang/sleep-app\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"sleepStatistics\">\n      <SleepApp></SleepApp>\n    </div>\n    \n  );\n}\n\nfunction SleepApp() {\n  const viewofSleep_viewRef = useRef();\n  const viewofSleepRef = useRef();\n  const viewofStat_viewRef = useRef();\n\n  useEffect(() => {\n    const runtime = new Runtime();\n    runtime.module(notebook, name => {\n      console.log(name)\n      if (name === \"viewof sleep_view\") return new Inspector(viewofSleep_viewRef.current);\n      if (name === \"viewof sleep\") return new Inspector(viewofSleepRef.current);\n      if (name === \"viewof stat\") return new Inspector(viewofStat_viewRef.current);\n      else return true;\n    });\n    return () => runtime.dispose();\n  }, []);\n\n  return (\n    <>\n      <div ref={viewofSleep_viewRef} />\n      <div ref={viewofSleepRef} />\n      <div ref={viewofStat_viewRef} />\n      \n    </>\n  );\n}\n\n/*\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}*/\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}